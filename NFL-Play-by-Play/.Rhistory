for (b in 1:1000){
sim.errs <- rnorm(dim(gmp)[1], 0, sigma)
sim.vals <- exp(ModelA$fitted.values) + exp(sim.errs)
ModA.i <- lm(log(sim.vals) ~ log(gmp$pop))
sim.f.i <- c(sim.f.i,
var.test(ModA.i, ModelB, alternative = "greater")$statistic)
}
sim.f.ii <- c()
for (b in 1:1000){
sim.errs <-  sample(ModelA$residuals, dim(gmp)[1], replace = TRUE)
sim.vals <- exp(ModelA$fitted.values) + exp(sim.errs)
ModA.ii <- lm(log(sim.vals) ~ log(gmp$pop))
sim.f.ii <- c(sim.f.ii,
var.test(ModA.ii, ModelB, alternative = "greater")$statistic)
}
hist(sim.f.i, main = "Distribution of F-statistic Under (i)",
xlab = "F-statistic", ylab = "Frequency")
hist(sim.f.ii, main = "Distribution of F-statistic Under (ii)",
xlab = "F-statistic", ylab = "Frequency")
ModelC <- gam(log(pcgmp) ~ s(log(ict),k=5,fx=T) + s(log(management),k=5,fx=T),
data = gmp)
loocv.mses <- matrix(nrow = dim(gmp)[1], ncol = 3)
for (b in 1:dim(gmp)[1]){
ModelA.b <- lm(log(pcgmp) ~ log(pop), data = gmp[-b,])
ModelB.b <- gam(log(pcgmp) ~ log(pop) + s(log(finance),k=5,fx=T) +
s(log(prof.tech),k=5,fx=T) + s(log(ict),k=5,fx=T) +
s(log(management),k=5,fx=T), data = gmp[-b,])
ModelC.b <- gam(log(pcgmp) ~ s(log(ict),k=5,fx=T) +
s(log(management),k=5,fx=T),
data = gmp[-b,])
loocv.mses[b,1] <- mean(ModelA.b$residuals^2)
loocv.mses[b,2] <- mean(ModelB.b$residuals^2)
loocv.mses[b,3] <- mean(ModelC.b$residuals^2)
}
mse.ests <- apply(loocv.mses, 2, mean)
mse.ests
n <- dim(gmp)[1]
x.xbar.sq <- (gmp$pop - mean(gmp$pop))^2
l.diag <- (1 / n) + (x.xbar.sq / sum(x.xbar.sq))
mean((ModelA$residuals / (1 - l.diag))^2)
mean((ModelB$residuals / (1 - l.diag))^2)
mean((ModelC$residuals / (1 - l.diag))^2)
preds <- predict.gam(ModelC, newdata = gmp[c(10, 34, 70),], se.fit = TRUE)
# Load Data and Libraries
library(mgcv)
gmp <- read.csv("gmp.csv")
# EDA (Scatterplot)
pairs(gmp[, 3:8], pch = ".")
# EDA (Histograms)
par(mfrow=c(1,2))
hist(gmp$pcgmp,
xlab = "Gross Metropolitan Product per-capita",
main = "Histogram of PCGMP")
hist(gmp$pop,
xlab = "Population",
main = "Histogram of Population")
# Fit Linear Model A
ModelA <- lm(log(pcgmp) ~ log(pop), data = gmp)
# Check Residuals
plot(ModelA)
# Fit Additive Model B
ModelB <- gam(log(pcgmp) ~ log(pop) + s(log(finance),k=5,fx=T) +
s(log(prof.tech),k=5,fx=T) + s(log(ict),k=5,fx=T) +
s(log(management),k=5,fx=T), data = gmp)
# Check Residuals
plot(ModelB$fitted.values, ModelB$residuals,
xlab = "Fitted Values",
ylab = "Residuals",
main = "Model B Residuals vs. Fitted Values")
abline(h = 0, col = "red")
# Model Summary
summary(ModelB)
# Model A vs Model B F Test
anova(ModelA, ModelB, test = "F")
# Log(pop) in Model B F Test
ModelB.1 <- gam(log(pcgmp) ~ s(log(finance),k=5,fx=T) +
s(log(prof.tech),k=5,fx=T) + s(log(ict),k=5,fx=T) +
s(log(management),k=5,fx=T), data = gmp)
anova(ModelB.1, ModelB, test = "F")
# Nonlinear Log(finance) in Model B F Test
ModelB.2 <- gam(log(pcgmp) ~ log(pop) + log(finance) +
s(log(prof.tech),k=5,fx=T) + s(log(ict),k=5,fx=T) +
s(log(management),k=5,fx=T), data = gmp)
anova(ModelB.2, ModelB, test = "F")
# Nonlinear Log(prof.tech) in Model B F Test
ModelB.3 <- gam(log(pcgmp) ~ log(pop) + s(log(finance),k=5,fx=T) +
log(prof.tech) + s(log(ict),k=5,fx=T) +
s(log(management),k=5,fx=T), data = gmp)
anova(ModelB.3, ModelB, test = "F")
# Nonlinear Log(ict) in Model B F Test
ModelB.4 <- gam(log(pcgmp) ~ log(pop) + s(log(finance),k=5,fx=T) +
s(log(prof.tech),k=5,fx=T) + log(ict) +
s(log(management),k=5,fx=T), data = gmp)
anova(ModelB.4, ModelB, test = "F")
# Nonlinear Log(management) in Model B F Test
ModelB.5 <- gam(log(pcgmp) ~ log(pop) + s(log(finance),k=5,fx=T) +
s(log(prof.tech),k=5,fx=T) + s(log(ict),k=5,fx=T) +
log(management), data = gmp)
anova(ModelB.5, ModelB, test = "F")
# Plot partial response functions
plot(ModelB)
# Parametric Bootstrap
B = 1000
N = nrow(gmp)
sigma = sd(ModelA$residuals)
para.f <- c()
for (b in 1:B){
para.errs <- rnorm(N, 0, sigma)
para.vals <- exp(ModelA$fitted.values) + exp(para.errs)
para.ModelA <- lm(log(para.vals) ~ log(gmp$pop))
sim.f.i <- c(para.f, anova(para.ModelA, ModelB, test = "T")$statistic)
}
x = anova(ModelA, ModelB, test = "F")
x$F
length(x$F)
x$`Sum of Sq`
# Parametric Bootstrap
B = 1000
N = nrow(gmp)
sigma = sd(ModelA$residuals)
para.f <- c()
for (b in 1:B){
para.errs <- rnorm(N, 0, sigma)
para.vals <- exp(ModelA$fitted.values) + exp(para.errs)
para.ModelA <- lm(log(para.vals) ~ log(gmp$pop))
sim.f.i <- c(para.f, anova(para.ModelA, ModelB, test = "T")$F[2])
}
# Parametric Bootstrap
B = 1000
N = nrow(gmp)
sigma = sd(ModelA$residuals)
para.f <- c()
for (b in 1:B){
para.errs <- rnorm(N, 0, sigma)
para.vals <- exp(ModelA$fitted.values) + exp(para.errs)
para.ModelA <- lm(log(para.vals) ~ log(gmp$pop))
para.f <- c(para.f, anova(para.ModelA, ModelB, test = "T")$F[2])
}
# Parametric Bootstrap
B = 1000
N = nrow(gmp)
sigma = sd(ModelA$residuals)
para.f <- rep(NA, B)
for (b in 1:B){
para.errs <- rnorm(N, 0, sigma)
para.vals <- exp(ModelA$fitted.values) + exp(para.errs)
para.ModelA <- lm(log(para.vals) ~ log(gmp$pop))
para.f[b] <- anova(para.ModelA, ModelB, test = "T")$F[2]
}
# Parametric Bootstrap
B = 1000
N = nrow(gmp)
sigma = sd(ModelA$residuals)
para.f <- rep(NA, B)
for (b in 1:B){
para.errs <- rnorm(N, 0, sigma)
para.vals <- exp(ModelA$fitted.values) + exp(para.errs)
para.ModelA <- lm(log(para.vals) ~ log(gmp$pop))
para.f[b] <- anova(para.ModelA, ModelA, test = "T")$F[2]
}
para.gmp <- gmp
# Parametric Bootstrap
B = 1000
N = nrow(gmp)
sigma = sd(ModelA$residuals)
para.f <- rep(NA, B)
para.gmp <- gmp
for (b in 1:B){
para.errs <- rnorm(N, 0, sigma)
para.vals <- exp(ModelA$fitted.values) + exp(para.errs)
para.gmp$pcgmp <- para.vals
para.ModelA <- lm(log(pcgmp) ~ log(pop), data = para.gmp)
para.f[b] <- anova(para.ModelA, ModelB, test = "T")$F[2]
}
# Parametric Bootstrap
B = 1000
N = nrow(gmp)
sigma = sd(ModelA$residuals)
para.f <- rep(NA, B)
para.gmp <- gmp
for (b in 1:B){
para.errs <- rnorm(N, 0, sigma)
para.vals <- exp(ModelA$fitted.values) + exp(para.errs)
para.gmp$pcgmp <- para.vals
para.ModelA <- lm(log(pcgmp) ~ log(pop), data = para.gmp)
para.f[b] <- anova(para.ModelA, ModelB, test = "F")$F[2]
}
hist(para.f)
ModelA <- gam(log(pcgmp) ~ log(pop), data = gmp)
plot(ModelA)
ModelA <- lm(log(pcgmp) ~ log(pop), data = gmp)
plot(ModelA)
# Fit Linear Model A
ModelA <- gam(log(pcgmp) ~ log(pop), data = gmp)
# Check Residuals
plot(ModelA)
# Fit Linear Model A
ModelA <- lm(log(pcgmp) ~ log(pop), data = gmp)
# Check Residuals
plot(ModelA)
# Parametric Bootstrap
B = 1000
N = nrow(gmp)
sigma = sd(ModelA$residuals)
para.f <- rep(NA, B)
para.gmp <- gmp
for (b in 1:B){
para.errs <- rnorm(N, 0, sigma)
para.vals <- exp(ModelA$fitted.values) + exp(para.errs)
para.gmp$pcgmp <- para.vals
para.ModelA <- lm(log(pcgmp) ~ log(pop), data = para.gmp)
para.f[b] <- anova(para.ModelA, ModelB, test = "F")$F[2]
}
length(para.f)
mean(para.f)
x$F
x$F[2]
View(para.ModelA)
para.ModelA
summary(para.ModelA)
summary(ModelA)
View(para.gmp)
# Nonlinear Log(prof.tech) in Model B F Test
ModelB.3 <- gam(log(pcgmp) ~ log(pop) + s(log(finance),k=5,fx=T) +
log(prof.tech) + s(log(ict),k=5,fx=T) +
s(log(management),k=5,fx=T), data = gmp)
anova(ModelB.3, ModelB, test = "F")
var.test(ModelB.3, ModelB)
# Nonlinear Log(prof.tech) in Model B F Test
ModelB.3 <- gam(log(pcgmp) ~ log(pop) + s(log(finance),k=5,fx=T) +
log(prof.tech) + s(log(ict),k=5,fx=T) +
s(log(management),k=5,fx=T), data = gmp)
anova(ModelB.3, ModelB, test = "F")
var.test(ModelB.3, ModelB, alternative = "greater")
# Nonlinear Log(prof.tech) in Model B F Test
ModelB.3 <- gam(log(pcgmp) ~ log(pop) + s(log(finance),k=5,fx=T) +
log(prof.tech) + s(log(ict),k=5,fx=T) +
s(log(management),k=5,fx=T), data = gmp)
anova(ModelB.3, ModelB, test = "F")
var.test(ModelB, ModelB.3, alternative = "greater")
# Nonlinear Log(prof.tech) in Model B F Test
ModelB.3 <- gam(log(pcgmp) ~ log(pop) + s(log(finance),k=5,fx=T) +
log(prof.tech) + s(log(ict),k=5,fx=T) +
s(log(management),k=5,fx=T), data = gmp)
anova(ModelB.3, ModelB, test = "F")
# Parametric Bootstrap
B = 1000
N = nrow(gmp)
sigma = sd(ModelA$residuals)
para.f <- rep(NA, B)
para.gmp <- gmp
for (b in 1:B){
para.errs <- rnorm(N, 0, sigma)
para.vals <- exp(ModelA$fitted.values) + exp(para.errs)
para.gmp$pcgmp <- para.vals
para.ModelA <- lm(log(pcgmp) ~ log(pop), data = para.gmp)
para.ModelA.sum <- summary(para.ModelA)
}
para.ModelA.sum$r.squared
summary(lm(log(pcgmp) ~ log(pop), data = para.gmp))
# Parametric Bootstrap
B = 1000
N = nrow(gmp)
sigma = sd(ModelA$residuals)
para.f <- rep(NA, B)
para.gmp <- gmp
for (b in 1:B){
para.errs <- rnorm(N, 0, sigma)
para.vals <- exp(ModelA$fitted.values) + exp(para.errs)
para.gmp$pcgmp <- para.vals
para.ModelA <- lm(log(para.gmp$pcgmp) ~ log(para.gmp$pop))
}
summary(para.ModelA)
library("mgcv")
gmp <- read.csv("gmp.csv")
ModelA <- lm(log(pcgmp) ~ log(pop), data = gmp)
plot(ModelA)
ModelB <- gam(log(pcgmp) ~ log(pop) + s(log(finance),k=5,fx=T) +
s(log(prof.tech),k=5,fx=T) + s(log(ict),k=5,fx=T) +
s(log(management),k=5,fx=T), data = gmp)
summary(ModelB)
plot(ModelB$fitted.values, ModelB$residuals, xlab = "Fitted Values",
ylab = "Residuals", main = "Model B: Residuals vs. Fitted Values")
abline(0, 0, col = "red")
var.test(ModelA, ModelB, alternative = "greater")
ModC1 <- gam(log(pcgmp) ~ s(log(finance),k=5,fx=T) +
s(log(prof.tech),k=5,fx=T) + s(log(ict),k=5,fx=T) +
s(log(management),k=5,fx=T), data = gmp)
ModC2 <- gam(log(pcgmp) ~ log(pop) + log(finance) +
s(log(prof.tech),k=5,fx=T) + s(log(ict),k=5,fx=T) +
s(log(management),k=5,fx=T), data = gmp)
ModC3 <- gam(log(pcgmp) ~ log(pop) + s(log(finance),k=5,fx=T) +
log(prof.tech) + s(log(ict),k=5,fx=T) +
s(log(management),k=5,fx=T), data = gmp)
ModC4 <- gam(log(pcgmp) ~ log(pop) + s(log(finance),k=5,fx=T) +
s(log(prof.tech),k=5,fx=T) + log(ict) +
s(log(management),k=5,fx=T), data = gmp)
ModC5 <- gam(log(pcgmp) ~ log(pop) + s(log(finance),k=5,fx=T) +
s(log(prof.tech),k=5,fx=T) + s(log(ict),k=5,fx=T) +
log(management), data = gmp)
var.test(ModelB, ModC1, alternative = "greater")
var.test(ModelB, ModC2, alternative = "greater")
var.test(ModelB, ModC3, alternative = "greater")
var.test(ModelB, ModC4, alternative = "greater")
var.test(ModelB, ModC5, alternative = "greater")
plot(log(gmp$pop), ModelB$fitted.values, xlab = "Log of Population",
ylab = "Fitted Values", main = "Partial Response for Population")
plot(log(gmp$finance), ModelB$fitted.values, xlab = "Log of Finance",
ylab = "Fitted Values", main = "Partial Response for Finance")
plot(log(gmp$prof.tech), ModelB$fitted.values, xlab = "Log of Prof.tech",
ylab = "Fitted Values", main = "Partial Response for Prof.tech")
plot(log(gmp$ict), ModelB$fitted.values, xlab = "Log of Ict",
ylab = "Fitted Values", main = "Partial Response for Ict")
plot(log(gmp$management), ModelB$fitted.values, xlab = "Log of Management",
ylab = "Fitted Values", main = "Partial Response for Management")
set.seed(36402)
sigma = sd(ModelA$residuals)
sim.f.i <- c()
for (b in 1:1000){
sim.errs <- rnorm(dim(gmp)[1], 0, sigma)
sim.vals <- exp(ModelA$fitted.values) + exp(sim.errs)
ModA.i <- lm(log(sim.vals) ~ log(gmp$pop))
sim.f.i <- c(sim.f.i,
var.test(ModA.i, ModelB, alternative = "greater")$statistic)
}
sim.f.ii <- c()
for (b in 1:1000){
sim.errs <-  sample(ModelA$residuals, dim(gmp)[1], replace = TRUE)
sim.vals <- exp(ModelA$fitted.values) + exp(sim.errs)
ModA.ii <- lm(log(sim.vals) ~ log(gmp$pop))
sim.f.ii <- c(sim.f.ii,
var.test(ModA.ii, ModelB, alternative = "greater")$statistic)
}
hist(sim.f.i, main = "Distribution of F-statistic Under (i)",
xlab = "F-statistic", ylab = "Frequency")
hist(sim.f.ii, main = "Distribution of F-statistic Under (ii)",
xlab = "F-statistic", ylab = "Frequency")
ModelC <- gam(log(pcgmp) ~ s(log(ict),k=5,fx=T) + s(log(management),k=5,fx=T),
data = gmp)
loocv.mses <- matrix(nrow = dim(gmp)[1], ncol = 3)
for (b in 1:dim(gmp)[1]){
ModelA.b <- lm(log(pcgmp) ~ log(pop), data = gmp[-b,])
ModelB.b <- gam(log(pcgmp) ~ log(pop) + s(log(finance),k=5,fx=T) +
s(log(prof.tech),k=5,fx=T) + s(log(ict),k=5,fx=T) +
s(log(management),k=5,fx=T), data = gmp[-b,])
ModelC.b <- gam(log(pcgmp) ~ s(log(ict),k=5,fx=T) +
s(log(management),k=5,fx=T),
data = gmp[-b,])
loocv.mses[b,1] <- mean(ModelA.b$residuals^2)
loocv.mses[b,2] <- mean(ModelB.b$residuals^2)
loocv.mses[b,3] <- mean(ModelC.b$residuals^2)
}
mse.ests <- apply(loocv.mses, 2, mean)
mse.ests
n <- dim(gmp)[1]
x.xbar.sq <- (gmp$pop - mean(gmp$pop))^2
l.diag <- (1 / n) + (x.xbar.sq / sum(x.xbar.sq))
mean((ModelA$residuals / (1 - l.diag))^2)
mean((ModelB$residuals / (1 - l.diag))^2)
mean((ModelC$residuals / (1 - l.diag))^2)
preds <- predict.gam(ModelC, newdata = gmp[c(10, 34, 70),], se.fit = TRUE)
summary(ModA.i)
# Load Data and Libraries
library(mgcv)
gmp <- read.csv("gmp.csv")
# EDA (Scatterplot)
pairs(gmp[, 3:8], pch = ".")
# EDA (Histograms)
par(mfrow=c(1,2))
hist(gmp$pcgmp,
xlab = "Gross Metropolitan Product per-capita",
main = "Histogram of PCGMP")
hist(gmp$pop,
xlab = "Population",
main = "Histogram of Population")
# Fit Linear Model A
ModelA <- lm(log(pcgmp) ~ log(pop), data = gmp)
# Check Residuals
plot(ModelA)
# Fit Additive Model B
ModelB <- gam(log(pcgmp) ~ log(pop) + s(log(finance),k=5,fx=T) +
s(log(prof.tech),k=5,fx=T) + s(log(ict),k=5,fx=T) +
s(log(management),k=5,fx=T), data = gmp)
# Check Residuals
plot(ModelB$fitted.values, ModelB$residuals,
xlab = "Fitted Values",
ylab = "Residuals",
main = "Model B Residuals vs. Fitted Values")
abline(h = 0, col = "red")
# Model Summary
summary(ModelB)
# Model A vs Model B F Test
anova(ModelA, ModelB, test = "F")
# Log(pop) in Model B F Test
ModelB.1 <- gam(log(pcgmp) ~ s(log(finance),k=5,fx=T) +
s(log(prof.tech),k=5,fx=T) + s(log(ict),k=5,fx=T) +
s(log(management),k=5,fx=T), data = gmp)
anova(ModelB.1, ModelB, test = "F")
# Nonlinear Log(finance) in Model B F Test
ModelB.2 <- gam(log(pcgmp) ~ log(pop) + log(finance) +
s(log(prof.tech),k=5,fx=T) + s(log(ict),k=5,fx=T) +
s(log(management),k=5,fx=T), data = gmp)
anova(ModelB.2, ModelB, test = "F")
# Nonlinear Log(prof.tech) in Model B F Test
ModelB.3 <- gam(log(pcgmp) ~ log(pop) + s(log(finance),k=5,fx=T) +
log(prof.tech) + s(log(ict),k=5,fx=T) +
s(log(management),k=5,fx=T), data = gmp)
anova(ModelB.3, ModelB, test = "F")
# Nonlinear Log(ict) in Model B F Test
ModelB.4 <- gam(log(pcgmp) ~ log(pop) + s(log(finance),k=5,fx=T) +
s(log(prof.tech),k=5,fx=T) + log(ict) +
s(log(management),k=5,fx=T), data = gmp)
anova(ModelB.4, ModelB, test = "F")
# Nonlinear Log(management) in Model B F Test
ModelB.5 <- gam(log(pcgmp) ~ log(pop) + s(log(finance),k=5,fx=T) +
s(log(prof.tech),k=5,fx=T) + s(log(ict),k=5,fx=T) +
log(management), data = gmp)
anova(ModelB.5, ModelB, test = "F")
# Plot partial response functions
plot(ModelB)
# Parametric Bootstrap
B = 1000
N = nrow(gmp)
sigma = sd(ModelA$residuals)
para.f <- rep(NA, B)
para.gmp <- gmp
for (b in 1:B){
para.errs <- rnorm(N, 0, sigma)
para.vals <- exp(ModelA$fitted.values) + exp(para.errs)
para.gmp$pcgmp <- para.vals
para.ModelA <- lm(log(pcgmp) ~ log(pop), data = para.gmp)
para.anova <- anova(para.ModelA, ModelB)
}
para.anova
# Parametric Bootstrap
B = 1000
N = nrow(gmp)
sigma = sd(ModelA$residuals)
para.f <- rep(NA, B)
para.gmp <- gmp
for (b in 1:B){
para.errs <- rnorm(N, 0, sigma)
para.vals <- exp(ModelA$fitted.values) + exp(para.errs)
para.gmp$pcgmp <- para.vals
para.ModelA <- lm(log(pcgmp) ~ log(pop), data = para.gmp)
para.anova <- anova(para.ModelA, ModelB, test = "F")
}
para.anova
# Parametric Bootstrap
B = 1000
N = nrow(gmp)
sigma = sd(ModelA$residuals)
para.f <- rep(NA, B)
para.gmp <- gmp
for (b in 1:B){
para.errs <- rnorm(N, 0, sigma)
para.vals <- exp(ModelA$fitted.values) + exp(para.errs)
para.gmp$pcgmp <- para.vals
para.ModelA <- lm(log(pcgmp) ~ log(pop), data = para.gmp)
para.anova <- anova(para.ModelA, ModelB, test = "F")
para.f <- para.anova$F[2]
}
para.f
# Parametric Bootstrap
B = 1000
N = nrow(gmp)
sigma = sd(ModelA$residuals)
para.f <- rep(NA, B)
para.gmp <- gmp
for (b in 1:B){
para.errs <- rnorm(N, 0, sigma)
para.vals <- exp(ModelA$fitted.values) + exp(para.errs)
para.gmp$pcgmp <- para.vals
para.ModelA <- lm(log(pcgmp) ~ log(pop), data = para.gmp)
para.anova <- anova(para.ModelA, ModelB, test = "F")
para.f[b] <- para.anova$F[2]
}
# Parametric Bootstrap
B = 1000
N = nrow(gmp)
sigma = sd(ModelA$residuals)
para.f <- rep(NA, B)
para.gmp <- gmp
for (b in 1:B){
para.errs <- rnorm(N, 0, sigma)
para.vals <- exp(ModelA$fitted.values) + exp(para.errs)
para.gmp$pcgmp <- para.vals
para.ModelA <- lm(log(pcgmp) ~ log(pop), data = para.gmp)
para.anova <- anova(para.ModelA, ModelB, test = "F")
para.f[b] <- para.anova$F
}
# Parametric Bootstrap
B = 1000
N = nrow(gmp)
sigma = sd(ModelA$residuals)
para.f <- rep(NA, B)
para.gmp <- gmp
for (b in 1:B){
para.errs <- rnorm(N, 0, sigma)
para.vals <- exp(ModelA$fitted.values) + exp(para.errs)
para.gmp$pcgmp <- para.vals
para.ModelA <- lm(log(pcgmp) ~ log(pop), data = para.gmp)
para.anova <- anova(para.ModelA, ModelB, test = "F")
}
# Model A vs Model B F Test
anova(ModelA, ModelB, test = "F")
para.anova
(40/7) - 2
240 - (15/7)
237.8571 / 3.714286
shiny::runApp("~/Desktop/36-315 Stat Graphics and Visual/Labs/Lab10")
setwd("~/Desktop/36-315 Stat Graphics and Visual/Interactive Project/Answers/NFL-Play-by-Play")
